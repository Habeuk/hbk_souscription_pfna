<?php
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;

/**
 *
 * @file
 * Primary module hooks for hbk_souscription_pfna module.
 */

/**
 * Implement hook_entity_base_field_info
 *
 * @param EntityTypeInterface $entity_type
 */
function hbk_souscription_pfna_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'commerce_order') {
    $fields['hbk_description_need'] = BaseFieldDefinition::create('text_long')->setLabel(" Description need ")->setDisplayOptions('form', [])->setDisplayOptions('view',
      [
        'label' => 'hidden',
        'type' => 'text_default',
        'weight' => 0
      ])->setDisplayConfigurable('view', TRUE)->setDisplayConfigurable('form', true);
    $fields['hbk_custom_profile'] = BaseFieldDefinition::create('entity_reference')->setLabel(t('Custom profile'))->setSetting('target_type', 'profile')->setSetting('handler', 'default')->setDisplayOptions(
      'form', [
        'type' => 'entity_reference_autocomplete',
        'weight' => 5,
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'autocomplete_type' => 'tags',
          'placeholder' => ''
        ]
      ])->setDisplayConfigurable('form', TRUE)->setDisplayConfigurable('view', TRUE)->setCardinality(1);
  }
  return $fields;
}

/**
 *
 * @param array $variables
 */
function hbk_souscription_pfna_preprocess_region__content(&$vars) {
  if (\Drupal::routeMatch()->getRouteName() == 'hbk_souscription_pfna.souscription') {
    $vars['attributes']['class'][] = 'container';
  }
  if (\Drupal::currentUser()->id() == 1) {
    // hook_user_login();
    // hook_user_logout();
    // \Drupal::messenger()->addStatus("Test display message");
  }
}

/**
 * Implement hook_user_login
 */
function hbk_souscription_pfna_user_login() {
  $request = \Drupal::request();
  /**
   *
   * @var \Drupal\hbk_souscription_pfna\Services\ManageSouscription $manage_souscription
   */
  $manage_souscription = \Drupal::service("hbk_souscription_pfna.manage_souscription");
  $manage_souscription->afterLogin($request);
}

